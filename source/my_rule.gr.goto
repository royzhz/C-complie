421
!= ( ) * + , - / ; < <= = == > >= @ and const_int else float id if int not or return void while { } AAA Assignment_sentence C_ADD C_END C_MUL C_and C_end C_not Call_Function_sentence Call_list Create_variable Declarative_sentence E EQUATION E_Add_Expression E_Expression E_Item E_divisor Function Function_block Functions If_sentence In_Call_Function_sentence M N Paramete_list Program Return_sentence Statement Statement_block Statements TYPE While_sentence relop variable_new_layer 
float 0 6
int 0 5
void 0 7
Function 0 3
Functions 0 2
Program 0 1
TYPE 0 4
float 3 6
int 3 5
void 3 7
Function 3 3
Functions 3 8
TYPE 3 4
id 4 9
( 9 10
@ 10 11
float 10 6
int 10 5
void 10 7
Paramete_list 10 12
TYPE 10 13
) 12 15
, 12 14
id 13 16
float 14 6
int 14 5
void 14 7
TYPE 14 17
@ 15 19
Create_variable 15 18
id 17 20
{ 18 22
Function_block 18 21
Statement_block 18 23
@ 22 26
} 22 24
variable_new_layer 22 25
float 25 6
id 25 38
if 25 42
int 25 5
return 25 40
void 25 7
while 25 41
{ 25 27
Assignment_sentence 25 31
Call_Function_sentence 25 32
Declarative_sentence 25 30
If_sentence 25 33
In_Call_Function_sentence 25 37
Return_sentence 25 35
Statement 25 29
Statement_block 25 36
Statements 25 28
TYPE 25 39
While_sentence 25 34
@ 27 26
} 27 44
variable_new_layer 27 43
@ 28 47
} 28 45
M 28 46
; 37 48
( 38 49
= 38 50
id 39 51
( 40 62
; 40 54
@ 40 58
const_int 40 63
id 40 52
not 40 55
EQUATION 40 53
E_Add_Expression 40 59
E_Expression 40 56
E_Item 40 60
E_divisor 40 61
In_Call_Function_sentence 40 57
@ 41 65
M 41 64
( 42 66
float 43 6
id 43 38
if 43 42
int 43 5
return 43 40
void 43 7
while 43 41
{ 43 27
Assignment_sentence 43 31
Call_Function_sentence 43 32
Declarative_sentence 43 30
If_sentence 43 33
In_Call_Function_sentence 43 37
Return_sentence 43 35
Statement 43 29
Statement_block 43 36
Statements 43 67
TYPE 43 39
While_sentence 43 34
float 46 6
id 46 38
if 46 42
int 46 5
return 46 40
void 46 7
while 46 41
{ 46 27
Assignment_sentence 46 31
Call_Function_sentence 46 32
Declarative_sentence 46 30
If_sentence 46 33
In_Call_Function_sentence 46 37
Return_sentence 46 35
Statement 46 68
Statement_block 46 36
TYPE 46 39
While_sentence 46 34
( 49 79
@ 49 69
const_int 49 80
id 49 70
not 49 73
Call_list 49 72
EQUATION 49 71
E_Add_Expression 49 76
E_Expression 49 74
E_Item 49 77
E_divisor 49 78
In_Call_Function_sentence 49 75
( 50 62
@ 50 58
const_int 50 63
id 50 52
not 50 55
EQUATION 50 81
E_Add_Expression 50 59
E_Expression 50 56
E_Item 50 60
E_divisor 50 61
In_Call_Function_sentence 50 57
; 51 82
= 51 83
( 52 84
; 53 85
and 53 87
or 53 86
( 55 62
@ 55 58
const_int 55 63
id 55 52
not 55 55
EQUATION 55 88
E_Add_Expression 55 59
E_Expression 55 56
E_Item 55 60
E_divisor 55 61
In_Call_Function_sentence 55 57
!= 59 95
< 59 92
<= 59 93
== 59 94
> 59 90
>= 59 91
relop 59 89
+ 60 96
- 60 97
* 61 98
/ 61 99
( 62 109
@ 62 105
const_int 62 110
id 62 100
not 62 102
EQUATION 62 101
E_Add_Expression 62 106
E_Expression 62 103
E_Item 62 107
E_divisor 62 108
In_Call_Function_sentence 62 104
( 64 111
( 66 120
const_int 66 122
id 66 121
not 66 115
C_ADD 66 117
C_END 66 119
C_MUL 66 118
C_and 66 113
C_end 66 116
C_not 66 114
E 66 112
@ 67 47
} 67 123
M 67 46
( 70 124
and 71 126
or 71 125
) 72 128
, 72 127
( 73 79
@ 73 131
const_int 73 80
id 73 129
not 73 73
EQUATION 73 130
E_Add_Expression 73 76
E_Expression 73 74
E_Item 73 77
E_divisor 73 78
In_Call_Function_sentence 73 75
!= 76 95
< 76 92
<= 76 93
== 76 94
> 76 90
>= 76 91
relop 76 132
+ 77 133
- 77 134
* 78 135
/ 78 136
( 79 109
@ 79 105
const_int 79 110
id 79 100
not 79 102
EQUATION 79 137
E_Add_Expression 79 106
E_Expression 79 103
E_Item 79 107
E_divisor 79 108
In_Call_Function_sentence 79 104
; 81 138
and 81 87
or 81 86
( 83 62
@ 83 58
const_int 83 63
id 83 52
not 83 55
EQUATION 83 139
E_Add_Expression 83 59
E_Expression 83 56
E_Item 83 60
E_divisor 83 61
In_Call_Function_sentence 83 57
( 84 79
@ 84 69
const_int 84 80
id 84 70
not 84 73
Call_list 84 140
EQUATION 84 71
E_Add_Expression 84 76
E_Expression 84 74
E_Item 84 77
E_divisor 84 78
In_Call_Function_sentence 84 75
( 86 62
@ 86 58
const_int 86 63
id 86 52
not 86 55
EQUATION 86 141
E_Add_Expression 86 59
E_Expression 86 56
E_Item 86 60
E_divisor 86 61
In_Call_Function_sentence 86 57
( 87 62
@ 87 58
const_int 87 63
id 87 52
not 87 55
EQUATION 87 142
E_Add_Expression 87 59
E_Expression 87 56
E_Item 87 60
E_divisor 87 61
In_Call_Function_sentence 87 57
and 88 87
or 88 86
( 89 146
const_int 89 148
id 89 147
E_Add_Expression 89 143
E_Item 89 144
E_divisor 89 145
( 96 62
const_int 96 63
id 96 150
E_Add_Expression 96 149
E_Item 96 60
E_divisor 96 61
( 97 62
const_int 97 63
id 97 150
E_Add_Expression 97 151
E_Item 97 60
E_divisor 97 61
( 98 153
const_int 98 155
id 98 154
E_divisor 98 152
( 99 153
const_int 99 155
id 99 154
E_divisor 99 156
( 100 157
) 101 160
and 101 159
or 101 158
( 102 109
@ 102 105
const_int 102 110
id 102 100
not 102 102
EQUATION 102 161
E_Add_Expression 102 106
E_Expression 102 103
E_Item 102 107
E_divisor 102 108
In_Call_Function_sentence 102 104
!= 106 95
< 106 92
<= 106 93
== 106 94
> 106 90
>= 106 91
relop 106 162
+ 107 163
- 107 164
* 108 165
/ 108 166
( 109 109
@ 109 105
const_int 109 110
id 109 100
not 109 102
EQUATION 109 167
E_Add_Expression 109 106
E_Expression 109 103
E_Item 109 107
E_divisor 109 108
In_Call_Function_sentence 109 104
( 111 120
const_int 111 122
id 111 121
not 111 115
C_ADD 111 117
C_END 111 119
C_MUL 111 118
C_and 111 113
C_end 111 116
C_not 111 114
E 111 168
) 112 169
or 113 170
and 114 171
( 115 120
const_int 115 122
id 115 121
C_ADD 115 117
C_END 115 119
C_MUL 115 118
C_end 115 172
!= 117 95
+ 117 174
- 117 175
< 117 92
<= 117 93
== 117 94
> 117 90
>= 117 91
relop 117 173
* 118 176
/ 118 177
( 120 181
const_int 120 183
id 120 182
C_ADD 120 178
C_END 120 180
C_MUL 120 179
( 124 79
@ 124 69
const_int 124 80
id 124 70
not 124 73
Call_list 124 184
EQUATION 124 71
E_Add_Expression 124 76
E_Expression 124 74
E_Item 124 77
E_divisor 124 78
In_Call_Function_sentence 124 75
( 125 79
@ 125 131
const_int 125 80
id 125 129
not 125 73
EQUATION 125 185
E_Add_Expression 125 76
E_Expression 125 74
E_Item 125 77
E_divisor 125 78
In_Call_Function_sentence 125 75
( 126 79
@ 126 131
const_int 126 80
id 126 129
not 126 73
EQUATION 126 186
E_Add_Expression 126 76
E_Expression 126 74
E_Item 126 77
E_divisor 126 78
In_Call_Function_sentence 126 75
( 127 79
@ 127 131
const_int 127 80
id 127 187
not 127 73
EQUATION 127 188
E_Add_Expression 127 76
E_Expression 127 74
E_Item 127 77
E_divisor 127 78
In_Call_Function_sentence 127 75
( 129 124
and 130 126
or 130 125
( 132 192
const_int 132 194
id 132 193
E_Add_Expression 132 189
E_Item 132 190
E_divisor 132 191
( 133 79
const_int 133 80
id 133 196
E_Add_Expression 133 195
E_Item 133 77
E_divisor 133 78
( 134 79
const_int 134 80
id 134 196
E_Add_Expression 134 197
E_Item 134 77
E_divisor 134 78
( 135 199
const_int 135 201
id 135 200
E_divisor 135 198
( 136 199
const_int 136 201
id 136 200
E_divisor 136 202
) 137 203
and 137 159
or 137 158
; 139 204
and 139 87
or 139 86
) 140 205
, 140 127
and 141 87
or 141 86
and 142 87
or 142 86
+ 144 206
- 144 207
* 145 208
/ 145 209
( 146 109
@ 146 105
const_int 146 110
id 146 100
not 146 102
EQUATION 146 210
E_Add_Expression 146 106
E_Expression 146 103
E_Item 146 107
E_divisor 146 108
In_Call_Function_sentence 146 104
( 153 109
@ 153 105
const_int 153 110
id 153 100
not 153 102
EQUATION 153 211
E_Add_Expression 153 106
E_Expression 153 103
E_Item 153 107
E_divisor 153 108
In_Call_Function_sentence 153 104
( 157 79
@ 157 69
const_int 157 80
id 157 70
not 157 73
Call_list 157 212
EQUATION 157 71
E_Add_Expression 157 76
E_Expression 157 74
E_Item 157 77
E_divisor 157 78
In_Call_Function_sentence 157 75
( 158 109
@ 158 105
const_int 158 110
id 158 100
not 158 102
EQUATION 158 213
E_Add_Expression 158 106
E_Expression 158 103
E_Item 158 107
E_divisor 158 108
In_Call_Function_sentence 158 104
( 159 109
@ 159 105
const_int 159 110
id 159 100
not 159 102
EQUATION 159 214
E_Add_Expression 159 106
E_Expression 159 103
E_Item 159 107
E_divisor 159 108
In_Call_Function_sentence 159 104
and 161 159
or 161 158
( 162 218
const_int 162 220
id 162 219
E_Add_Expression 162 215
E_Item 162 216
E_divisor 162 217
( 163 109
const_int 163 110
id 163 222
E_Add_Expression 163 221
E_Item 163 107
E_divisor 163 108
( 164 109
const_int 164 110
id 164 222
E_Add_Expression 164 223
E_Item 164 107
E_divisor 164 108
( 165 225
const_int 165 227
id 165 226
E_divisor 165 224
( 166 225
const_int 166 227
id 166 226
E_divisor 166 228
) 167 229
and 167 159
or 167 158
) 168 230
@ 169 232
M 169 231
@ 170 234
M 170 233
@ 171 234
M 171 235
( 173 239
const_int 173 241
id 173 240
C_ADD 173 236
C_END 173 238
C_MUL 173 237
( 174 120
const_int 174 122
id 174 121
C_END 174 119
C_MUL 174 242
( 175 120
const_int 175 122
id 175 121
C_END 175 119
C_MUL 175 243
( 176 120
const_int 176 122
id 176 121
C_END 176 244
( 177 120
const_int 177 122
id 177 121
C_END 177 245
) 178 248
+ 178 246
- 178 247
* 179 249
/ 179 250
( 181 181
const_int 181 183
id 181 182
C_ADD 181 251
C_END 181 180
C_MUL 181 179
) 184 252
, 184 127
and 185 126
or 185 125
and 186 126
or 186 125
( 187 124
and 188 126
or 188 125
+ 190 253
- 190 254
* 191 255
/ 191 256
( 192 109
@ 192 105
const_int 192 110
id 192 100
not 192 102
EQUATION 192 257
E_Add_Expression 192 106
E_Expression 192 103
E_Item 192 107
E_divisor 192 108
In_Call_Function_sentence 192 104
( 199 109
@ 199 105
const_int 199 110
id 199 100
not 199 102
EQUATION 199 258
E_Add_Expression 199 106
E_Expression 199 103
E_Item 199 107
E_divisor 199 108
In_Call_Function_sentence 199 104
( 206 146
const_int 206 148
id 206 147
E_Add_Expression 206 259
E_Item 206 144
E_divisor 206 145
( 207 146
const_int 207 148
id 207 147
E_Add_Expression 207 260
E_Item 207 144
E_divisor 207 145
( 208 262
const_int 208 264
id 208 263
E_divisor 208 261
( 209 262
const_int 209 264
id 209 263
E_divisor 209 265
) 210 266
and 210 159
or 210 158
) 211 267
and 211 159
or 211 158
) 212 268
, 212 127
and 213 159
or 213 158
and 214 159
or 214 158
+ 216 269
- 216 270
* 217 271
/ 217 272
( 218 109
@ 218 105
const_int 218 110
id 218 100
not 218 102
EQUATION 218 273
E_Add_Expression 218 106
E_Expression 218 103
E_Item 218 107
E_divisor 218 108
In_Call_Function_sentence 218 104
( 225 109
@ 225 105
const_int 225 110
id 225 100
not 225 102
EQUATION 225 274
E_Add_Expression 225 106
E_Expression 225 103
E_Item 225 107
E_divisor 225 108
In_Call_Function_sentence 225 104
@ 230 232
M 230 275
{ 231 27
Statement_block 231 276
( 233 284
const_int 233 286
id 233 285
not 233 279
C_ADD 233 281
C_END 233 283
C_MUL 233 282
C_and 233 277
C_end 233 280
C_not 233 278
( 235 293
const_int 235 295
id 235 294
not 235 288
C_ADD 235 290
C_END 235 292
C_MUL 235 291
C_end 235 289
C_not 235 287
+ 236 296
- 236 297
* 237 298
/ 237 299
( 239 181
const_int 239 183
id 239 182
C_ADD 239 300
C_END 239 180
C_MUL 239 179
* 242 176
/ 242 177
* 243 176
/ 243 177
( 246 181
const_int 246 183
id 246 182
C_END 246 180
C_MUL 246 301
( 247 181
const_int 247 183
id 247 182
C_END 247 180
C_MUL 247 302
( 249 181
const_int 249 183
id 249 182
C_END 249 303
( 250 181
const_int 250 183
id 250 182
C_END 250 304
) 251 305
+ 251 246
- 251 247
( 253 192
const_int 253 194
id 253 193
E_Add_Expression 253 306
E_Item 253 190
E_divisor 253 191
( 254 192
const_int 254 194
id 254 193
E_Add_Expression 254 307
E_Item 254 190
E_divisor 254 191
( 255 309
const_int 255 311
id 255 310
E_divisor 255 308
( 256 309
const_int 256 311
id 256 310
E_divisor 256 312
) 257 313
and 257 159
or 257 158
) 258 314
and 258 159
or 258 158
( 262 109
@ 262 105
const_int 262 110
id 262 100
not 262 102
EQUATION 262 315
E_Add_Expression 262 106
E_Expression 262 103
E_Item 262 107
E_divisor 262 108
In_Call_Function_sentence 262 104
( 269 218
const_int 269 220
id 269 219
E_Add_Expression 269 316
E_Item 269 216
E_divisor 269 217
( 270 218
const_int 270 220
id 270 219
E_Add_Expression 270 317
E_Item 270 216
E_divisor 270 217
( 271 319
const_int 271 321
id 271 320
E_divisor 271 318
( 272 319
const_int 272 321
id 272 320
E_divisor 272 322
) 273 323
and 273 159
or 273 158
) 274 324
and 274 159
or 274 158
{ 275 27
Statement_block 275 325
@ 276 327
N 276 326
and 278 328
( 279 284
const_int 279 286
id 279 285
C_ADD 279 281
C_END 279 283
C_MUL 279 282
C_end 279 329
!= 281 95
+ 281 331
- 281 332
< 281 92
<= 281 93
== 281 94
> 281 90
>= 281 91
relop 281 330
* 282 333
/ 282 334
( 284 181
const_int 284 183
id 284 182
C_ADD 284 335
C_END 284 180
C_MUL 284 179
( 288 293
const_int 288 295
id 288 294
C_ADD 288 290
C_END 288 292
C_MUL 288 291
C_end 288 336
!= 290 95
+ 290 338
- 290 339
< 290 92
<= 290 93
== 290 94
> 290 90
>= 290 91
relop 290 337
* 291 340
/ 291 341
( 293 181
const_int 293 183
id 293 182
C_ADD 293 342
C_END 293 180
C_MUL 293 179
( 296 239
const_int 296 241
id 296 240
C_END 296 238
C_MUL 296 343
( 297 239
const_int 297 241
id 297 240
C_END 297 238
C_MUL 297 344
( 298 239
const_int 298 241
id 298 240
C_END 298 345
( 299 239
const_int 299 241
id 299 240
C_END 299 346
) 300 347
+ 300 246
- 300 247
* 301 249
/ 301 250
* 302 249
/ 302 250
( 309 109
@ 309 105
const_int 309 110
id 309 100
not 309 102
EQUATION 309 348
E_Add_Expression 309 106
E_Expression 309 103
E_Item 309 107
E_divisor 309 108
In_Call_Function_sentence 309 104
) 315 349
and 315 159
or 315 158
( 319 109
@ 319 105
const_int 319 110
id 319 100
not 319 102
EQUATION 319 350
E_Add_Expression 319 106
E_Expression 319 103
E_Item 319 107
E_divisor 319 108
In_Call_Function_sentence 319 104
else 326 351
@ 328 234
M 328 352
( 330 356
const_int 330 358
id 330 357
C_ADD 330 353
C_END 330 355
C_MUL 330 354
( 331 284
const_int 331 286
id 331 285
C_END 331 283
C_MUL 331 359
( 332 284
const_int 332 286
id 332 285
C_END 332 283
C_MUL 332 360
( 333 284
const_int 333 286
id 333 285
C_END 333 361
( 334 284
const_int 334 286
id 334 285
C_END 334 362
) 335 363
+ 335 246
- 335 247
( 337 367
const_int 337 369
id 337 368
C_ADD 337 364
C_END 337 366
C_MUL 337 365
( 338 293
const_int 338 295
id 338 294
C_END 338 292
C_MUL 338 370
( 339 293
const_int 339 295
id 339 294
C_END 339 292
C_MUL 339 371
( 340 293
const_int 340 295
id 340 294
C_END 340 372
( 341 293
const_int 341 295
id 341 294
C_END 341 373
) 342 374
+ 342 246
- 342 247
* 343 298
/ 343 299
* 344 298
/ 344 299
) 348 375
and 348 159
or 348 158
) 350 376
and 350 159
or 350 158
@ 351 232
M 351 377
( 352 384
const_int 352 386
id 352 385
not 352 379
C_ADD 352 381
C_END 352 383
C_MUL 352 382
C_end 352 380
C_not 352 378
+ 353 387
- 353 388
* 354 389
/ 354 390
( 356 181
const_int 356 183
id 356 182
C_ADD 356 391
C_END 356 180
C_MUL 356 179
* 359 333
/ 359 334
* 360 333
/ 360 334
+ 364 392
- 364 393
* 365 394
/ 365 395
( 367 181
const_int 367 183
id 367 182
C_ADD 367 396
C_END 367 180
C_MUL 367 179
* 370 340
/ 370 341
* 371 340
/ 371 341
{ 377 27
Statement_block 377 397
( 379 384
const_int 379 386
id 379 385
C_ADD 379 381
C_END 379 383
C_MUL 379 382
C_end 379 398
!= 381 95
+ 381 400
- 381 401
< 381 92
<= 381 93
== 381 94
> 381 90
>= 381 91
relop 381 399
* 382 402
/ 382 403
( 384 181
const_int 384 183
id 384 182
C_ADD 384 404
C_END 384 180
C_MUL 384 179
( 387 356
const_int 387 358
id 387 357
C_END 387 355
C_MUL 387 405
( 388 356
const_int 388 358
id 388 357
C_END 388 355
C_MUL 388 406
( 389 356
const_int 389 358
id 389 357
C_END 389 407
( 390 356
const_int 390 358
id 390 357
C_END 390 408
) 391 409
+ 391 246
- 391 247
( 392 367
const_int 392 369
id 392 368
C_END 392 366
C_MUL 392 410
( 393 367
const_int 393 369
id 393 368
C_END 393 366
C_MUL 393 411
( 394 367
const_int 394 369
id 394 368
C_END 394 412
( 395 367
const_int 395 369
id 395 368
C_END 395 413
) 396 414
+ 396 246
- 396 247
( 399 181
const_int 399 183
id 399 182
C_ADD 399 415
C_END 399 180
C_MUL 399 179
( 400 384
const_int 400 386
id 400 385
C_END 400 383
C_MUL 400 416
( 401 384
const_int 401 386
id 401 385
C_END 401 383
C_MUL 401 417
( 402 384
const_int 402 386
id 402 385
C_END 402 418
( 403 384
const_int 403 386
id 403 385
C_END 403 419
) 404 420
+ 404 246
- 404 247
* 405 389
/ 405 390
* 406 389
/ 406 390
* 410 394
/ 410 395
* 411 394
/ 411 395
+ 415 246
- 415 247
* 416 402
/ 416 403
* 417 402
/ 417 403

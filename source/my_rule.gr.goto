348
!= ( ) * + , - / ; < <= = == > >= @ Parameter_list and const_int else float id if int not or return void while { } AAA Assignment_sentence C_ADD C_END C_MUL C_and C_end C_not Call_Function_sentence Create_variable Declarative_sentence E EQUATION E_Add_Expression E_Expression E_Item E_divisor Function Function_block Functions If_sentence M N Paramete_list Program Return_sentence Statement Statement_block Statements TYPE While_sentence relop variable_new_layer 
float 0 6
int 0 5
void 0 7
Function 0 3
Functions 0 2
Program 0 1
TYPE 0 4
float 3 6
int 3 5
void 3 7
Function 3 3
Functions 3 8
TYPE 3 4
id 4 9
( 9 10
@ 10 11
float 10 6
int 10 5
void 10 7
Paramete_list 10 12
TYPE 10 13
) 12 15
, 12 14
id 13 16
float 14 6
int 14 5
void 14 7
TYPE 14 17
@ 15 19
Create_variable 15 18
id 17 20
{ 18 22
Function_block 18 21
Statement_block 18 23
@ 22 26
} 22 24
variable_new_layer 22 25
float 25 6
id 25 37
if 25 41
int 25 5
return 25 39
void 25 7
while 25 40
{ 25 27
Assignment_sentence 25 31
Call_Function_sentence 25 32
Declarative_sentence 25 30
If_sentence 25 33
Return_sentence 25 35
Statement 25 29
Statement_block 25 36
Statements 25 28
TYPE 25 38
While_sentence 25 34
@ 27 26
} 27 43
variable_new_layer 27 42
@ 28 46
} 28 44
M 28 45
( 37 47
= 37 48
id 38 49
( 39 58
; 39 51
@ 39 54
const_int 39 60
id 39 59
not 39 52
EQUATION 39 50
E_Add_Expression 39 55
E_Expression 39 53
E_Item 39 56
E_divisor 39 57
@ 40 62
M 40 61
( 41 63
float 42 6
id 42 37
if 42 41
int 42 5
return 42 39
void 42 7
while 42 40
{ 42 27
Assignment_sentence 42 31
Call_Function_sentence 42 32
Declarative_sentence 42 30
If_sentence 42 33
Return_sentence 42 35
Statement 42 29
Statement_block 42 36
Statements 42 64
TYPE 42 38
While_sentence 42 34
float 45 6
id 45 37
if 45 41
int 45 5
return 45 39
void 45 7
while 45 40
{ 45 27
Assignment_sentence 45 31
Call_Function_sentence 45 32
Declarative_sentence 45 30
If_sentence 45 33
Return_sentence 45 35
Statement 45 65
Statement_block 45 36
TYPE 45 38
While_sentence 45 34
Parameter_list 47 66
( 48 58
@ 48 54
const_int 48 60
id 48 59
not 48 52
EQUATION 48 67
E_Add_Expression 48 55
E_Expression 48 53
E_Item 48 56
E_divisor 48 57
; 49 68
= 49 69
; 50 70
and 50 72
or 50 71
( 52 58
@ 52 54
const_int 52 60
id 52 59
not 52 52
EQUATION 52 73
E_Add_Expression 52 55
E_Expression 52 53
E_Item 52 56
E_divisor 52 57
!= 55 80
< 55 77
<= 55 78
== 55 79
> 55 75
>= 55 76
relop 55 74
+ 56 81
- 56 82
* 57 83
/ 57 84
( 58 92
@ 58 88
const_int 58 94
id 58 93
not 58 86
EQUATION 58 85
E_Add_Expression 58 89
E_Expression 58 87
E_Item 58 90
E_divisor 58 91
( 61 95
( 63 104
const_int 63 106
id 63 105
not 63 99
C_ADD 63 101
C_END 63 103
C_MUL 63 102
C_and 63 97
C_end 63 100
C_not 63 98
E 63 96
@ 64 46
} 64 107
M 64 45
) 66 108
; 67 109
and 67 72
or 67 71
( 69 58
@ 69 54
const_int 69 60
id 69 59
not 69 52
EQUATION 69 110
E_Add_Expression 69 55
E_Expression 69 53
E_Item 69 56
E_divisor 69 57
( 71 58
@ 71 54
const_int 71 60
id 71 59
not 71 52
EQUATION 71 111
E_Add_Expression 71 55
E_Expression 71 53
E_Item 71 56
E_divisor 71 57
( 72 58
@ 72 54
const_int 72 60
id 72 59
not 72 52
EQUATION 72 112
E_Add_Expression 72 55
E_Expression 72 53
E_Item 72 56
E_divisor 72 57
and 73 72
or 73 71
( 74 116
const_int 74 118
id 74 117
E_Add_Expression 74 113
E_Item 74 114
E_divisor 74 115
( 81 58
const_int 81 60
id 81 59
E_Add_Expression 81 119
E_Item 81 56
E_divisor 81 57
( 82 58
const_int 82 60
id 82 59
E_Add_Expression 82 120
E_Item 82 56
E_divisor 82 57
( 83 122
const_int 83 124
id 83 123
E_divisor 83 121
( 84 122
const_int 84 124
id 84 123
E_divisor 84 125
) 85 128
and 85 127
or 85 126
( 86 92
@ 86 88
const_int 86 94
id 86 93
not 86 86
EQUATION 86 129
E_Add_Expression 86 89
E_Expression 86 87
E_Item 86 90
E_divisor 86 91
!= 89 80
< 89 77
<= 89 78
== 89 79
> 89 75
>= 89 76
relop 89 130
+ 90 131
- 90 132
* 91 133
/ 91 134
( 92 92
@ 92 88
const_int 92 94
id 92 93
not 92 86
EQUATION 92 135
E_Add_Expression 92 89
E_Expression 92 87
E_Item 92 90
E_divisor 92 91
( 95 104
const_int 95 106
id 95 105
not 95 99
C_ADD 95 101
C_END 95 103
C_MUL 95 102
C_and 95 97
C_end 95 100
C_not 95 98
E 95 136
) 96 137
or 97 138
and 98 139
( 99 104
const_int 99 106
id 99 105
C_ADD 99 101
C_END 99 103
C_MUL 99 102
C_end 99 140
!= 101 80
+ 101 142
- 101 143
< 101 77
<= 101 78
== 101 79
> 101 75
>= 101 76
relop 101 141
* 102 144
/ 102 145
( 104 149
const_int 104 151
id 104 150
C_ADD 104 146
C_END 104 148
C_MUL 104 147
; 108 152
; 110 153
and 110 72
or 110 71
and 111 72
or 111 71
and 112 72
or 112 71
+ 114 154
- 114 155
* 115 156
/ 115 157
( 116 92
@ 116 88
const_int 116 94
id 116 93
not 116 86
EQUATION 116 158
E_Add_Expression 116 89
E_Expression 116 87
E_Item 116 90
E_divisor 116 91
( 122 92
@ 122 88
const_int 122 94
id 122 93
not 122 86
EQUATION 122 159
E_Add_Expression 122 89
E_Expression 122 87
E_Item 122 90
E_divisor 122 91
( 126 92
@ 126 88
const_int 126 94
id 126 93
not 126 86
EQUATION 126 160
E_Add_Expression 126 89
E_Expression 126 87
E_Item 126 90
E_divisor 126 91
( 127 92
@ 127 88
const_int 127 94
id 127 93
not 127 86
EQUATION 127 161
E_Add_Expression 127 89
E_Expression 127 87
E_Item 127 90
E_divisor 127 91
and 129 127
or 129 126
( 130 165
const_int 130 167
id 130 166
E_Add_Expression 130 162
E_Item 130 163
E_divisor 130 164
( 131 92
const_int 131 94
id 131 93
E_Add_Expression 131 168
E_Item 131 90
E_divisor 131 91
( 132 92
const_int 132 94
id 132 93
E_Add_Expression 132 169
E_Item 132 90
E_divisor 132 91
( 133 171
const_int 133 173
id 133 172
E_divisor 133 170
( 134 171
const_int 134 173
id 134 172
E_divisor 134 174
) 135 175
and 135 127
or 135 126
) 136 176
@ 137 178
M 137 177
@ 138 180
M 138 179
@ 139 180
M 139 181
( 141 185
const_int 141 187
id 141 186
C_ADD 141 182
C_END 141 184
C_MUL 141 183
( 142 104
const_int 142 106
id 142 105
C_END 142 103
C_MUL 142 188
( 143 104
const_int 143 106
id 143 105
C_END 143 103
C_MUL 143 189
( 144 104
const_int 144 106
id 144 105
C_END 144 190
( 145 104
const_int 145 106
id 145 105
C_END 145 191
) 146 194
+ 146 192
- 146 193
* 147 195
/ 147 196
( 149 149
const_int 149 151
id 149 150
C_ADD 149 197
C_END 149 148
C_MUL 149 147
( 154 116
const_int 154 118
id 154 117
E_Add_Expression 154 198
E_Item 154 114
E_divisor 154 115
( 155 116
const_int 155 118
id 155 117
E_Add_Expression 155 199
E_Item 155 114
E_divisor 155 115
( 156 201
const_int 156 203
id 156 202
E_divisor 156 200
( 157 201
const_int 157 203
id 157 202
E_divisor 157 204
) 158 205
and 158 127
or 158 126
) 159 206
and 159 127
or 159 126
and 160 127
or 160 126
and 161 127
or 161 126
+ 163 207
- 163 208
* 164 209
/ 164 210
( 165 92
@ 165 88
const_int 165 94
id 165 93
not 165 86
EQUATION 165 211
E_Add_Expression 165 89
E_Expression 165 87
E_Item 165 90
E_divisor 165 91
( 171 92
@ 171 88
const_int 171 94
id 171 93
not 171 86
EQUATION 171 212
E_Add_Expression 171 89
E_Expression 171 87
E_Item 171 90
E_divisor 171 91
@ 176 178
M 176 213
{ 177 27
Statement_block 177 214
( 179 222
const_int 179 224
id 179 223
not 179 217
C_ADD 179 219
C_END 179 221
C_MUL 179 220
C_and 179 215
C_end 179 218
C_not 179 216
( 181 231
const_int 181 233
id 181 232
not 181 226
C_ADD 181 228
C_END 181 230
C_MUL 181 229
C_end 181 227
C_not 181 225
+ 182 234
- 182 235
* 183 236
/ 183 237
( 185 149
const_int 185 151
id 185 150
C_ADD 185 238
C_END 185 148
C_MUL 185 147
* 188 144
/ 188 145
* 189 144
/ 189 145
( 192 149
const_int 192 151
id 192 150
C_END 192 148
C_MUL 192 239
( 193 149
const_int 193 151
id 193 150
C_END 193 148
C_MUL 193 240
( 195 149
const_int 195 151
id 195 150
C_END 195 241
( 196 149
const_int 196 151
id 196 150
C_END 196 242
) 197 243
+ 197 192
- 197 193
( 201 92
@ 201 88
const_int 201 94
id 201 93
not 201 86
EQUATION 201 244
E_Add_Expression 201 89
E_Expression 201 87
E_Item 201 90
E_divisor 201 91
( 207 165
const_int 207 167
id 207 166
E_Add_Expression 207 245
E_Item 207 163
E_divisor 207 164
( 208 165
const_int 208 167
id 208 166
E_Add_Expression 208 246
E_Item 208 163
E_divisor 208 164
( 209 248
const_int 209 250
id 209 249
E_divisor 209 247
( 210 248
const_int 210 250
id 210 249
E_divisor 210 251
) 211 252
and 211 127
or 211 126
) 212 253
and 212 127
or 212 126
{ 213 27
Statement_block 213 254
@ 214 256
N 214 255
and 216 257
( 217 222
const_int 217 224
id 217 223
C_ADD 217 219
C_END 217 221
C_MUL 217 220
C_end 217 258
!= 219 80
+ 219 260
- 219 261
< 219 77
<= 219 78
== 219 79
> 219 75
>= 219 76
relop 219 259
* 220 262
/ 220 263
( 222 149
const_int 222 151
id 222 150
C_ADD 222 264
C_END 222 148
C_MUL 222 147
( 226 231
const_int 226 233
id 226 232
C_ADD 226 228
C_END 226 230
C_MUL 226 229
C_end 226 265
!= 228 80
+ 228 267
- 228 268
< 228 77
<= 228 78
== 228 79
> 228 75
>= 228 76
relop 228 266
* 229 269
/ 229 270
( 231 149
const_int 231 151
id 231 150
C_ADD 231 271
C_END 231 148
C_MUL 231 147
( 234 185
const_int 234 187
id 234 186
C_END 234 184
C_MUL 234 272
( 235 185
const_int 235 187
id 235 186
C_END 235 184
C_MUL 235 273
( 236 185
const_int 236 187
id 236 186
C_END 236 274
( 237 185
const_int 237 187
id 237 186
C_END 237 275
) 238 276
+ 238 192
- 238 193
* 239 195
/ 239 196
* 240 195
/ 240 196
) 244 277
and 244 127
or 244 126
( 248 92
@ 248 88
const_int 248 94
id 248 93
not 248 86
EQUATION 248 278
E_Add_Expression 248 89
E_Expression 248 87
E_Item 248 90
E_divisor 248 91
else 255 279
@ 257 180
M 257 280
( 259 284
const_int 259 286
id 259 285
C_ADD 259 281
C_END 259 283
C_MUL 259 282
( 260 222
const_int 260 224
id 260 223
C_END 260 221
C_MUL 260 287
( 261 222
const_int 261 224
id 261 223
C_END 261 221
C_MUL 261 288
( 262 222
const_int 262 224
id 262 223
C_END 262 289
( 263 222
const_int 263 224
id 263 223
C_END 263 290
) 264 291
+ 264 192
- 264 193
( 266 295
const_int 266 297
id 266 296
C_ADD 266 292
C_END 266 294
C_MUL 266 293
( 267 231
const_int 267 233
id 267 232
C_END 267 230
C_MUL 267 298
( 268 231
const_int 268 233
id 268 232
C_END 268 230
C_MUL 268 299
( 269 231
const_int 269 233
id 269 232
C_END 269 300
( 270 231
const_int 270 233
id 270 232
C_END 270 301
) 271 302
+ 271 192
- 271 193
* 272 236
/ 272 237
* 273 236
/ 273 237
) 278 303
and 278 127
or 278 126
@ 279 178
M 279 304
( 280 311
const_int 280 313
id 280 312
not 280 306
C_ADD 280 308
C_END 280 310
C_MUL 280 309
C_end 280 307
C_not 280 305
+ 281 314
- 281 315
* 282 316
/ 282 317
( 284 149
const_int 284 151
id 284 150
C_ADD 284 318
C_END 284 148
C_MUL 284 147
* 287 262
/ 287 263
* 288 262
/ 288 263
+ 292 319
- 292 320
* 293 321
/ 293 322
( 295 149
const_int 295 151
id 295 150
C_ADD 295 323
C_END 295 148
C_MUL 295 147
* 298 269
/ 298 270
* 299 269
/ 299 270
{ 304 27
Statement_block 304 324
( 306 311
const_int 306 313
id 306 312
C_ADD 306 308
C_END 306 310
C_MUL 306 309
C_end 306 325
!= 308 80
+ 308 327
- 308 328
< 308 77
<= 308 78
== 308 79
> 308 75
>= 308 76
relop 308 326
* 309 329
/ 309 330
( 311 149
const_int 311 151
id 311 150
C_ADD 311 331
C_END 311 148
C_MUL 311 147
( 314 284
const_int 314 286
id 314 285
C_END 314 283
C_MUL 314 332
( 315 284
const_int 315 286
id 315 285
C_END 315 283
C_MUL 315 333
( 316 284
const_int 316 286
id 316 285
C_END 316 334
( 317 284
const_int 317 286
id 317 285
C_END 317 335
) 318 336
+ 318 192
- 318 193
( 319 295
const_int 319 297
id 319 296
C_END 319 294
C_MUL 319 337
( 320 295
const_int 320 297
id 320 296
C_END 320 294
C_MUL 320 338
( 321 295
const_int 321 297
id 321 296
C_END 321 339
( 322 295
const_int 322 297
id 322 296
C_END 322 340
) 323 341
+ 323 192
- 323 193
( 326 149
const_int 326 151
id 326 150
C_ADD 326 342
C_END 326 148
C_MUL 326 147
( 327 311
const_int 327 313
id 327 312
C_END 327 310
C_MUL 327 343
( 328 311
const_int 328 313
id 328 312
C_END 328 310
C_MUL 328 344
( 329 311
const_int 329 313
id 329 312
C_END 329 345
( 330 311
const_int 330 313
id 330 312
C_END 330 346
) 331 347
+ 331 192
- 331 193
* 332 316
/ 332 317
* 333 316
/ 333 317
* 337 321
/ 337 322
* 338 321
/ 338 322
+ 342 192
- 342 193
* 343 329
/ 343 330
* 344 329
/ 344 330
